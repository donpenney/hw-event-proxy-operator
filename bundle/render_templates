#!/usr/bin/env bash

set -x

env

curl -L -o ./jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod 0755 ./jq
curl -L -o ./yq https://github.com/mikefarah/yq/releases/download/v4.16.1/yq_linux_amd64 && chmod 0755 ./yq


# get the required environment variables that are set when merging change sets
source render_vars

# Check for environment variables pertaining to images
if [[ -z "$CI_UPSTREAM_VERSION_SANITIZED" ]] ||
   [[ -z "$CI_BARE_METAL_EVENT_RELAY_UPSTREAM_URL" ]] ||
   [[ -z "$CI_BARE_METAL_EVENT_RELAY_UPSTREAM_COMMIT" ]] ||
   [[ -z "$CI_CI_BARE_METAL_EVENT_RELAY_BUILD_INFO_JSON" ]]; then
  echo "ERROR: All required environment variables not loaded"
  echo "    CI_UPSTREAM_VERSION_SANITIZED"
  echo "    CI_BARE_METAL_EVENT_RELAY_OPERATOR_UPSTREAM_URL"
  echo "    CI_BARE_METAL_EVENT_RELAY_OPERATOR_UPSTREAM_COMMIT"
  echo "    CI_BARE_METAL_EVENT_RELAY_BUILD_INFO_JSON"
  exit 3
fi

VERSION=${CI_UPSTREAM_VERSION_SANITIZED}

export CSV_NAME="bare-metal-event-relay.v${CI_VERSION}"

# Check for environment variables pertaining to the bundle
if [[ -z "$MANIFESTS_DIR" ]] ||
   [[ -z "$METADATA_DIR" ]] ||
   [[ -z "$TESTS_DIR" ]] ||
   [[ -z "$CHANNEL" ]] ||
   [[ -z "$VERSION" ]] ||
   [[ -z "$CI_VERSION" ]]; then
  echo "ERROR: All required environment variables not loaded"
  echo "    MANIFESTS_DIR"
  echo "    METADATA_DIR"
  echo "    TESTS_DIR"
  echo "    SUPPORTED_OCP_VERSIONS"
  echo "    CHANNEL"
  echo "    VERSION"
  echo "    CI_VERSION"
  exit 3
fi


export BARE_METAL_EVENT_RELAY_CHANNEL="$CHANNEL"
export BARE_METAL_EVENT_RELAY_CHANNELS="$CHANNELS"
export BARE_METAL_EVENT_RELAY_CHANNEL_DEFAULT="$DEFAULT_CHANNEL"
export BARE_METAL_EVENT_RELAY_DISPLAY_NAME="$DISPLAY_NAME"
export BARE_METAL_EVENT_RELAY_DESCRIPTION="$DESCRIPTION"
export BARE_METAL_EVENT_RELAY_IMAGE_SHA=$(echo "$CI_BARE_METAL_EVENT_RELAY_BUILD_INFO_JSON" | ./jq -r '.extra.image.index.pull[0]')
export BARE_METAL_EVENT_RELAY_IMAGE_NVR=$(echo "$CI_BARE_METAL_EVENT_RELAY_BUILD_INFO_JSON" | ./jq -r '.extra.image.index.pull[1]')
export BAREMETAL_HARDWARE_EVENT_PROXY_NVR="$CI_BAREMETAL_HARDWARE_EVENT_PROXY_NVR"
export KUBE_RBAC_PROXY_NVR="$CI_KUBE_RBAC_PROXY_NVR"
export CLOUD_EVENT_PROXY_NVR="$CI_CLOUD_EVENT_PROXY_NVR"
export BAREMETAL_HARDWARE_EVENT_PROXY_ENV="$CI_BARE_METAL_EVENT_RELAY_HW_EVENT_PROXY_ENV"
export KUBE_RBAC_PROXY_ENV="$CI_BARE_METAL_EVENT_RELAY_KUBE_RBAC_PROXY_ENV"
export CLOUD_EVENT_PROXY_ENV="$CI_BARE_METAL_EVENT_RELAY_CLOUD_EVENT_PROXY_ENV"
export BARE_METAL_EVENT_RELAY="$CI_BARE_METAL_EVENT_RELAY"

if [[ -z "$BARE_METAL_EVENT_RELAY_IMAGE_NVR" ]] ||
   [[ -z "$BARE_METAL_EVENT_RELAY_IMAGE_SHA" ]]; then
  echo "ERROR: cannot detect the image from build info"
  echo "$CI_BARE_METAL_EVENT_RELAY_BUILD_INFO_JSON"
  exit 4
fi

mv ../bundle/manifests/event.redhat-cne.org_hardwareevents.yaml ./${MANIFESTS_DIR}
mv ../bundle/manifests/hw-event-proxy-operator.clusterserviceversion.yaml ./${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml

./yq e -i '.metadata.annotations["containerImage"] = strenv(BAREMETAL_HARDWARE_EVENT_PROXY_NVR)' ${MANIFESTS_DIR}/baremetal-hardware-event-proxy-operator.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[0].image = strenv(KUBE_RBAC_PROXY_NVR)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].image = strenv(BARE_METAL_EVENT_RELAY_IMAGE_NVR)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].env[0].value = strenv(BARE_METAL_EVENT_RELAY)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].env[1].value = strenv(VERSION)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].env[2].value = strenv(BAREMETAL_HARDWARE_EVENT_PROXY_NVR)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].env[3].value = strenv(KUBE_RBAC_PROXY_NVR)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.install.spec.deployments[0].spec.template.spec.containers[1].env[4].value = strenv(CLOUD_EVENT_PROXY_NVR)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.displayName = strenv(BARE_METAL_EVENT_RELAY_DISPLAY_NAME)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.description = strenv(BARE_METAL_EVENT_RELAY_DESCRIPTION)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.spec.version = strenv(CI_VERSION)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.metadata.name = strenv(CSV_NAME)' ${MANIFESTS_DIR}/bare-metal-event-relay.v${CI_VERSION}.clusterserviceversion.yaml
./yq e -i '.annotations["operators.operatorframework.io.bundle.package.v1"] = strenv(BARE_METAL_EVENT_RELAY)' metadata/annotations.yaml
./yq e -i '.annotations["operators.operatorframework.io.bundle.channels.v1"] = strenv(BARE_METAL_EVENT_RELAY_CHANNELS)' metadata/annotations.yaml
./yq e -i '.annotations["operators.operatorframework.io.bundle.channel.default.v1"] = strenv(BARE_METAL_EVENT_RELAY_CHANNEL_DEFAULT)' metadata/annotations.yaml

# Done with the script repo, remove so it doesn't get committed into dist-git.
rm -rf ./yq ./jq

